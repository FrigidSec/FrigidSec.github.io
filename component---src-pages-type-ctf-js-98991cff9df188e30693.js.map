{"version":3,"sources":["webpack:///./src/pages/typeCTF.js","webpack:///./src/images/typesCTF.webp"],"names":["typeCTF","className","src","pic","alt","height","style","marginBottom","to","module","exports"],"mappings":"6FAAA,6EAwFeA,UAlFC,kBACd,kBAAC,IAAD,KACE,gEAEA,iCACE,0BAAMC,UAAU,cACd,yBAAKC,IAAKC,IAAKC,IAAI,GAAGC,OAAO,SAE/B,4BACE,wBAAIC,MAAO,CAACC,aAAc,SACvB,IADH,mKAMA,wBAAID,MAAO,CAACC,aAAc,SACvB,IADH,wOAOA,wBAAID,MAAO,CAACC,aAAc,SACvB,IADH,mMAMA,wBAAID,MAAO,CAACC,aAAc,SACvB,IADH,kKAMA,wBAAID,MAAO,CAACC,aAAc,SACvB,IADH,4QAOA,wBAAID,MAAO,CAACC,aAAc,SACvB,IADH,2KAMA,wBAAID,MAAO,CAACC,aAAc,SACvB,IADH,qSAQA,wBAAID,MAAO,CAACC,aAAc,SACvB,IADH,0PAOA,wBAAID,MAAO,CAACC,aAAc,SACvB,IADH,mKAMA,wBAAID,MAAO,CAACC,aAAc,SACvB,IADH,kNAQJ,6BACA,kBAAC,OAAD,CAAMC,GAAG,KAAT,2BACA,gC,qBCpFJC,EAAOC,QAAU,IAA0B","file":"component---src-pages-type-ctf-js-98991cff9df188e30693.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport pic from '../images/typesCTF.webp'\n\nimport Layout from '../components/layout'\n\nconst typeCTF = () => (\n  <Layout>\n    <h1>How many types of CTF are there?</h1>\n\n    <article>\n      <span className=\"image main\">\n        <img src={pic} alt=\"\" height=\"350\" />\n      </span>\n      <ul>\n        <li style={{marginBottom: '40px'}}>\n          {' '}\n          Just like cybersecurity, CTF has multiple domains. These domains\n          contain multiple sub-challenges, sometimes inspired by real-life\n          events. A few are as follows:\n        </li>\n        <li style={{marginBottom: '40px'}}>\n          {' '}\n          Physical challenges: In a physical challenge, the challenger will give\n          you a key and lock you in a closed space. This key can be any storage\n          device. The challenge is to examine the key, find the flag, and break\n          out of the space.\n        </li>\n        <li style={{marginBottom: '40px'}}>\n          {' '}\n          Website challenges: A webpage or a set of pages are given to you for\n          finding a flag. The challenge might involve exploring the page and\n          crafting a file that makes the website output the flag.\n        </li>\n        <li style={{marginBottom: '40px'}}>\n          {' '}\n          Network challenges: A sample network is given, and it is under attack.\n          To save the network, you need to find the flag and perform the\n          mentioned tasks with it.\n        </li>\n        <li style={{marginBottom: '40px'}}>\n          {' '}\n          Reverse engineering challenges: In a reverse engineering challenge,\n          you have to scour through the code of an executable file to find the\n          flag. For establishing a better understanding of the challenge, you\n          may need to run the executable and understand its behavior.\n        </li>\n        <li style={{marginBottom: '40px'}}>\n          {' '}\n          Steganography challenges: In this case, the flag is hidden in an image\n          or some other similar media. Again your task here is to look through\n          the media to find the flag.\n        </li>\n        <li style={{marginBottom: '40px'}}>\n          {' '}\n          Cryptographic challenges: The challenger encrypts the flag using some\n          technique, adds some information about the encryption method used, and\n          encrypts it again. This process may be repeated again and again to\n          increase complexity. You have to decrypt each layer one-by-one to\n          reach the flag.\n        </li>\n        <li style={{marginBottom: '40px'}}>\n          {' '}\n          Forensic analysis challenges: You are provided with logs and memory\n          dumps of a compromised machine or a machine that was used to attack\n          another computer. You will find the flag in the log files or the\n          memory dumps, after solving a few challenges.\n        </li>\n        <li style={{marginBottom: '40px'}}>\n          {' '}\n          Mobile security challenges: A compromised smartphone is provided to\n          you. The challenge here is to find the compromised application and use\n          it to find the flag.\n        </li>\n        <li style={{marginBottom: '40px'}}>\n          {' '}\n          Break-in challenges: Probably the hardest and the most popular set of\n          challenges on this list. You are given a virtual machine, and you have\n          to hack into the machine and gain root access to find the flag.\n        </li>\n      </ul>\n    </article>\n    <br />\n    <Link to=\"/\">Go back to the homepage</Link>\n    <br />\n  </Layout>\n)\n\nexport default typeCTF\n","module.exports = __webpack_public_path__ + \"static/typesCTF-18e2553b76676368dad4c0767e47f9ea.webp\";"],"sourceRoot":""}